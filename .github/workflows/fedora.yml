name: Fedora

on:
  pull_request:
  push:
  release:
    types: [published]

jobs:
  build:

    container: fedora:latest
    runs-on: ubuntu-latest

    steps:
      - name: prepare build tools
        run: |
          uname -a
          dnf -y install @development-tools @rpm-development-tools
          dnf -y install copr-cli make gcc-c++
          dnf -y upgrade git
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: prepare local xmake
        run: |
          cp -rf . ../xmake-source
      - uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: local#../xmake-source
      - uses: olegtarasov/get-tag@v2
        id: tagName

        # build artifacts
      - name: artifact
        run: |
          export XMAKE_ROOT=y
          dnf -y install ncurses-devel readline-devel
          rpmbuild -ba ./scripts/rpmbuild/SPECS/xmake.spec
          cp ~/rpmbuild/SRPMS/xmake-*.fc32.src.rpm ./scripts/xmake-latest.fc32.src.rpm
        # upload artifacts
      - uses: actions/upload-artifact@v2
        with:
          name: xmake-latest.fc32.spec
          path: ./scripts/rpmbuild/SPECS/xmake.spec
      - uses: actions/upload-artifact@v2
        with:
          name: xmake-latest.fc32.src.rpm
          path: ./scripts/xmake-latest.fc32.src.rpm
      - uses: actions/upload-artifact@v2
        with:
          name: xmake-latest.fc32.noarch.rpm
          path: ~/rpmbuild/RPMS/noarch/xmake-*.fc32.noarch.rpm

        # publish release
      - name: publish
        if: github.event.action == 'published'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./scripts/xmake-latest.fc32.src.rpm
          asset_name: xmake-${{ steps.tagName.outputs.tag }}.fc32.src.rpm
          asset_content_type: application/zip

        # publish release
      - name: publish
        if: github.event.action == 'published'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./scripts/rpmbuild/SPECS/xmake.spec
          asset_name: xmake-${{ steps.tagName.outputs.tag }}.fc32.spec
          asset_content_type: application/zip

        # tests
      - name: tests
        env:
          XMAKE_ROOT: y
        run: |
          xmake lua -v -D tests/run.lua

